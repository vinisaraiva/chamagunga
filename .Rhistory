()demo
demo()
library(readxl)
library(car)
library(ggplot2)
library(car)
#abrir arquivo em .xlsx
dat <- read_excel("/Users/vinidev/Desktop/ESTATISTICA/tabela_dados.xlsx") # abrir a tabela
# omitir N.A.s
dat= na.omit(dat)    #omitir os valores com "NAs"
ggplot (dat, aes (especies, fill=despejo_efluente)) +
geom_density(alpha = 0.5)
theme_ipsum_ps()
ggplot (dat, aes (especies, fill=despejo_efluente)) +
geom_density(alpha = 0.5)
install.packages("ggpubr")
library(ggpubr)
ggplot (dat, aes (especies, fill=despejo_efluente)) +
geom_density(alpha = 0.5)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
detach("package:ggpubr", unload = TRUE)
detach("package:ggplot2", unload = TRUE)
library(ggpubr)
ggplot (dat, aes (especies, fill=despejo_efluente)) +
geom_density(alpha = 0.5)
ggplot (dat, aes(x = DBO ,fill = despejo_efluente)) +
geom_density(alpha = 0.5)+
facet_grid(localidade ~.)    #separar por esp?cies
ggplot (dat, aes(x = DBO ,fill = despejo_efluente)) +
geom_density(alpha = 0.5)+
facet_grid(localidade ~.)    #separar por esp?cies
library(dplyr)
ggplot (dat, aes (especies, fill=despejo_efluente)) +
geom_density(alpha = 0.5)
ggplot (dat, aes(x = DBO ,fill = despejo_efluente)) +
geom_density(alpha = 0.5)+
facet_grid(localidade ~.)    #separar por esp?cies
hist (dat$especies)
ggboxplot(dat, x = "despejo_efluente", y = "especies", add = "jitter",
color="despejo_efluente", ylab= "N?mero de esp?cies", xlab= "Despejo de efluentes")
### indicar o caminho para abrir a base de dados disponibilizada
setwd("/Users/vinidev/Desktop/ESTATISTICA") # caminho para a pasta em que est? a seua planilha de dados
#abrir arquivo em .xlsx
dat <- read_excel("/Users/vinidev/Desktop/ESTATISTICA/dados_2.xlsx") # abrir a tabela
library(readxl)
library(car)
library(ggplot2)
#abrir arquivo em .xlsx
dat <- read_excel("/Users/vinidev/Desktop/ESTATISTICA/dados_2.xlsx") # abrir a tabela
#visualisar a estrutura dos dados
str(dat)
View (dat)
View (dat)
head (dat)
# omitir N.A.s
dat= na.omit(dat)    #omitir os valores com "NAs"
media_geral_riqueza <- mean(dat$riqueza)
print(media_geral_riqueza)
media_riq <- aggregate(riqueza ~ localidade, data = dat, FUN = mean)
desviopadrao_riq <- aggregate(riqueza ~ localidade, data = dat, FUN = sd)
View(desviopadrao_riq)
View(media_riq)
View(desviopadrao_riq)
View(media_riq)
View(dat)
media_abund <- aggregate(abundancia ~ localidade, data = dat, FUN = mean)
desviopadrao_abund <- aggregate(abundancia ~ localidade, data = dat, FUN = sd)
# Teste de Shapiro
shapiro.test(dat$pH)
shapiro.test(dat$pH [dat$localidade=="montante"])
shapiro.test(dat$pH [dat$localidade=="jusante"])
shapiro.test(dat$pH [dat$localidade=="intermediario"])
# An?lises de box-plot  (N?o foi feito em sala pq o pacote ggpubr n?o abriu nos notebooks)
library (ggpubr)
# An?lises de box-plot  (N?o foi feito em sala pq o pacote ggpubr n?o abriu nos notebooks)
library (ggpubr)
?boxplot
ggboxplot(dat, x = "localidade", y = "fundo", add = "riqueza",
color="localidade", ylab= "tipo de fudo", xlab= "Despejo de efluentes")
ggboxplot(dat, x = "fundo", y = "localidade", add = "riqueza",
color="localidade", ylab= "tipo de fudo", xlab= "Despejo de efluentes")
?ggboxplot
ggboxplot(dat, x = "fundo", y = "localidade",
color="localidade", ylab= "tipo de fudo", xlab= "Despejo de efluentes")
ggboxplot(dat, x = "fundo", y = "localidade",
color="localidade", ylab= "tipo de fudo", xlab= "tipos")
ggboxplot(dat, x = "fundo", y = "localidade",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot(dat$riqueza, x = "fundo", y = "localidade",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot(dat$pH, x = "fundo", y = "localidade",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot(dat$pH, x = "fundo", y = "localidade",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot(dat$pH, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot(dat$riqueza, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot2(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
?ggboxplot
?ggplot
gboxplot2(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") geom_boxplot()
gboxplot2(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
gboxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
ggboxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
ggboxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot("pH")
ggboxplot(dat, x = "fundo", y = "localidade",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot("pH")
ggplot(dat, aes(y = fundo, x = localidade)) +
geom_boxplot()
ggplot(dat, aes(y = fundo, x = localidade)) +
geom_boxplot("pH")
ggplot(dat, aes(y = fundo, x = localidade)) +
geom_boxplot("dat$riqueza")
ggplot(dat$riqueza, aes(y = fundo, x = localidade)) +
geom_boxplot("")
ggplot("dat$riqueza", aes(y = fundo, x = localidade)) +
geom_boxplot("")
ggboxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
ggboxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot(notch = T)
boxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot(notch = T)
boxplot(dat, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
dat1 <- dat$riqueza
ggboxplot(dat1, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo")
ggboxplot(dat1, x = "fundo", y = "localidade", add = "jitter",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
ggboxplot(dat1, x = "fundo", y = "localidade",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
ggboxplot(dat1, x = "localidade", y = "fundo",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
boxplot(dat1, x = "localidade", y = "fundo",
color="localidade", ylab= "localidade", xlab= "Tipos de Fundo") + geom_boxplot()
?ggboxplot
ggboxplot(dat, x = "riqueza", y = "localidade",
color="localidade", ylab= "localidade", xlab= "riqueza") + geom_boxplot()
ggboxplot(dat, x = "localidade", y = "riqueza",
color="localidade", ylab= "localidade", xlab= "riqueza") + geom_boxplot()
ggboxplot(dat, x = "localidade", y = "riqueza",
color="localidade", ylab= "riqueza", xlab= "localidade") + geom_boxplot(notch = T)
ggboxplot(dat, x = "localidade", y = "riqueza",
color="localidade", ylab= "riqueza", xlab= "localidade") + geom_boxplot()
ggboxplot(dat, x = "fundo", y = "riqueza",
color="fundo", ylab= "riqueza", xlab= "fundo") + geom_boxplot()
ggboxplot(dat, x = "localidade", y = "pH",
color="localidade", ylab= "pH", xlab= "localidade") + geom_boxplot()
ggplot(dat, aes(y = pH, x = turb)) +
geom_point(shape = 1, size = 3)
ggplot(dat, aes(y = pH, x = turbidez)) +
geom_point(color = "red", fill = "black", shape = 21)
ggplot(dat, aes(y = pH, x = turb)) +
geom_point(color = "red", fill = "black", shape = 21)
ggplot(dat, aes(y = pH, x = turb)) +
geom_point(color = "red", fill = "black", shape = 1)
ggplot(dat, aes(y = turb, x = pH)) +
geom_point(color = "red", fill = "black", shape = 1)
ggplot(dat, aes(y = turb, x = pH)) +
geom_point(color = "red", fill = "black", shape = 21)
setwd("/Users/vinidev/Desktop/chamagunga")
dados <- read_excel("coletachamagunga.xlsx") # abrir a tabela
View(dados)
str(dados)
# Chunk 1: setup
library(flexdashboard)
library(dplyr)
library(ggplot2)
library(readxl)
## diretorio windows setwd ("C:/Users/viniciussaraiva/Desktop/chamagunga/")
## dados <- read_excel("C:/Users/viniciussaraiva/Desktop/chamagunga/coletachamagunga.xlsx")
setwd("/Users/vinidev/Desktop/chamagunga")
dados <- read_excel("coletachamagunga.xlsx") # abrir a tabela
str(dados)
# Chunk 2
# Chunk 3
checkboxGroupInput("checkGroup", label = h4("Ponto de Coleta"),
choices = list("col1", "col2"))
checkboxGroupInput("checkGroup1", label = h4("Parametro"),
choices = list("col1", "col2"))
install.packages("knitr")
install.packages("bslib")
install.packages("bslib")
install.packages("htmltools")
install.packages("htmltools")
install.packages("html")
library(htmltools)
library(htmlwidgets)
??htmlwidgets
??htmltools
install.packages("viridi")
install.packages("viridis")
install.packages("viridisLite")
setwd ("/Users/vinidev/Desktop/ESTATISTICA")  # caminho para a pasta em que est? a seua planilha de dados
library(readxl)
tab1 <- read_excel("/Users/vinidev/Desktop/ESTATISTICA/dados_2.1.xlsx") # abrir a tabela
str(tab1)
tab2 = na.omit (tab1)
##### 1.1 An?lises de correla??o
## Avalia??o e sele??o de algumas vari?veis preditoras
library(corrplot)
library(corrgram)
library(ggplot2)
library(ggpubr)
# Construct the formula for this fish species
formula <- as.formula (TRU, "~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade"))
# Construct the formula for this fish species
formula <- as.formula (TRU, "~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade")
View(tab2)
# Construct the formula for this fish species
formula <- as.formula (tab2$TRU, "~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade")
# Construct the formula for this fish species
formula <- as.formula (tab2$TRU, ~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade)
# Construct the formula for this fish species
formula <- as.formula (tab2$TRU ~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade)
# Perform multiple linear regression
model <- lm(formula, data = tab2)
View(model)
# Print the summary of the model to see the variables' coefficients
print(summary(model))
# Print the summary of the model to see the variables' coefficients
print(summary(model))
# Construct the formula for this fish species
formula <- as.formula (tab2$TRU ~ localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo)
# Print the summary of the model to see the variables' coefficients
print(summary(model))
riq_ab2 = lm (tab2$TRU ~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade, data = tab2)
shapiro.test(riq_ab2$residuals)
summary(riq_ab2)
summary(riq_ab2)
riq_ab2 = lm (tab2$TRU ~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + fundo, data = tab2)
shapiro.test(riq_ab2$residuals)
summary(riq_ab2)
## Regress?o M?ltipla
##avaliar outra op??o entre localidades
riq_ab2 = lm (especies ~ nitrogenio + localidade, data = tab1)
## Regress?o M?ltipla
##avaliar outra op??o entre localidades
riq_ab2 = lm (tab1$especies ~ nitrogenio + localidade, data = tab1)
View(media_riq)
View(media_abund)
View(desviopadrao_riq)
View(desviopadrao_abund)
View(dados)
View(dat)
riq_ab2 = lm (tab2$TRU ~ localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + fundo, data = tab2)
riq_ab2 = lm (tab2$TRU ~ fundo + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
shapiro.test(riq_ab2$residuals)
summary(riq_ab2)
riq_ab2 = lm (tab2$TRU ~ fundo + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo)
# Construct the formula for this fish species
formula <- as.formula (TRU ~ localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo)
riq_ab2 = lm (TRU ~ fundo + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(riq_ab2)
riq_ab2 = lm (tab2$TRU ~ tab2$localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
shapiro.test(riq_ab2$residuals)
summary(riq_ab2)
rmultipla = lm (tab2$localidade ~ TRU + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
tab2 = na.omit (tab1)
rmultipla = lm (tab2$localidade ~ TRU + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
rmultipla = lm (tab2$localidade ~ TRU + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
multipla  <- lm(localidade ~ ., data = tab2[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
multipla  <- lm(tab2$localidade ~ ., data = tab2[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
rmultipla = lm (formula = tab2$localidade ~ TRU + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
rmultipla = lm (formula = tab2$TRU ~ localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(rmultipla)
rmultipla = lm (tab2$TRU ~ (localidade ˜ (das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)))
rmultipla = lm (tab2$TRU ~ localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(rmultipla)
# Construct the formula for this fish species
formula <- as.formula (TRU ~ localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo)
# Perform multiple linear regression
model <- lm(formula, data = tab2)
# Print the summary of the model to see the variables' coefficients
print(summary(model))
# Print the summary of the model to see the variables' coefficients
summary(model)
multipla  <- lm(formula = tab2$localidade ~ ., data = tab2[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
tab2 = na.omit (tab1)
multipla  <- lm(formula = tab2$localidade ~ ., data = tab2[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
multipla  <- lm(tab2$localidade ~ ., data = tab2[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
multipla  <- lm(tab2$TRU ., data = tab2[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
modeloregressao <- lm(abundancia ~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(modeloregressao)
rmultipla = lm (tab2$TRU ~ tab2$localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(rmultipla)
rmultipla = lm (formula = tab2$TRU ~ tab2$localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(rmultipla)
rmultipla = lm (formula = TRU ~ localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(rmultipla)
rmultipla = lm (TRU * localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
rmultipla = lm (tab2$TRU * localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
rmultipla = lm (tab2$TRU * tab2$localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
summary(rmultipla)
formula <- formula(TRU ~ alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade)
summary(formula)
formula <- lm(TRU ~ alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade)
summary(formula)
formula <- lm(TRU ~ alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo + localidade, data=tab2)
summary(formula)
# Construct the formula for this fish species
formula <- as.formula (tab2$TRU * tab2$localidade ~ localidade + fundo + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo)
summary(formula)
install.packages(performance)
library(readxl)
library(sjPlot)
library (jtools)
library(ggpubr)
library (GGally)
library (rsq)
install.package(performance)
install.packages("performance")
library (performance)
# médias e medianas de "abundancia"
media_abundancia <- mean(dados$abundancia)
# médias e medianas de "riqueza"
media_riqueza <- mean(dados$riqueza)
tab2 = na.omit (tab1)
variaveis <- c("riqueza", "abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")
cat("Hipótese nula rejeitada. p-value:", resultado$p.value, "\n\n")
resultado <- shapiro.test(dados[[var]])
variaveis <- c("riqueza", "abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")
print(paste("Variável:", var))
variaveis <- c("riqueza", "abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")
print(paste("Variável:", var))
cat("Hipótese nula rejeitada. p-value:", resultado$p.value, "\n\n")
resultado <- shapiro.test(dados[[var]])
# médias e medianas de "riqueza"
media_riqueza <- mean(dados$riqueza)
dados = na.omit (tab1)
tab1 <- read_excel("/Users/vinidev/Desktop/ESTATISTICA/dados_2.1.xlsx") # abrir a tabela
library(readxl)
library(sjPlot)
library (jtools)
library(ggpubr)
library (GGally)
library (rsq)
library (performance)
setwd ("/Users/vinidev/Desktop/ESTATISTICA")  # caminho para a pasta em que está a planilha de dados
tab1 <- read_excel("/Users/vinidev/Desktop/ESTATISTICA/dados_2.1.xlsx") # abrir a tabela
str(tab1)
dados = na.omit (tab1)
# médias e medianas de "riqueza"
media_riqueza <- mean(dados$riqueza)
mediana_riqueza <- median(dados$riqueza)
cat("Mediana de riqueza:", mediana_riqueza, "\n", "Média da riqueza:", media_riqueza)
# ************* ATIVIDADE 02 *********************
# 2. comparar a riqueza total entre as três porções do rio (montante, jusante e intermediário), o tipo de fundo (lodo ou cascalho) e a interação entre essas duas variáveis. Interprete os resultados de acordo com as saídas das análises realizadas. Obs: Teste os presssupostos dos testes.
#==============================================================#
View(dados)
#testa a Homogeneidade das variâncias
verificar_normalidade(dados)
variaveis <- c("riqueza", "abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")
verificar_normalidade <- function(dados) {
variaveis <- c("riqueza", "abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")
for (var in variaveis) {
print(paste("Variável:", var))
resultado <- shapiro.test(dados[[var]])
if (resultado$p.value > 0.05) {
cat("NORMAL. p-value:", resultado$p.value, "\n\n")
} else {
cat("Hipótese nula rejeitada. p-value:", resultado$p.value, "\n\n")
}
}
}
#testa a Homogeneidade das variâncias
verificar_normalidade(dados)
#(ANOVA) com dois fatores
resultado_anova <- aov(riqueza ~ localidade * fundo, data = dados)
shapiro.test(dados)
#(ANOVA) com dois fatores
resultado_anova <- aov(riqueza ~ localidade * fundo, data = dados)
print(summary(resultado_anova))
#testa a normalidade dos resíduos
residuos <- residuals(resultado_anova)
shapiro.test(residuos)
#(ANOVA) com dois fatores
resultado_anova <- aov(riqueza ~ localidade * fundo, data = dados)
print(summary(resultado_anova))
# result_lm <- lm(abundancia ~ ., data = dados[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
# print(summary(result_lm))
#Aplica a correlação de Spearman
correlacao <- sapply(dados[, c("TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")], function(var) cor(dados$abundancia, var, method = "spearman"))
# Exibe as correlações em ordem decrescente
print(sort(abs(result_cor), decreasing = TRUE))
# Exibe as correlações em ordem decrescente
print(sort(abs(correlacao), decreasing = TRUE))
verificar_normalidade(dados)#verifica a normalidade
correlacao <- lm(abundancia ~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
correlacao <- lm(abundancia ~ das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = dados)
summary(modeloregressao)
summary(correlacao)
# Exibe as correlações em ordem decrescente
print(sort(abs(correlacao), decreasing = TRUE))
# Exibe as correlações em ordem decrescente
print(sort((correlacao), decreasing = TRUE))
modeloAA <- glm(TRU ~ localidademontante * amm + pho +alt, data = dados, family = poisson)
# result_lm <- lm(abundancia ~ ., data = dados[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
# print(summary(result_lm))
#Aplica a correlação de Spearman
correlacao <- sapply(dados[, c("TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")], function(var) cor(dados$abundancia, var, method = "spearman"))
# Exibe as correlações em ordem decrescente
print(sort((correlacao), decreasing = TRUE))
summary(correlacao)
# Exibe as correlações em ordem decrescente
print(sort((correlacao), decreasing = TRUE))
multipla  <- lm(tab2$TRU ., data = tab2[, c("abundancia", "TRU", "OMB", "BAR", "BCO", "das", "alt", "pen", "deb", "pH", "dur", "pho", "nit", "amm", "oxy", "dbo")])
shapiro.test(rmultipla$residuals)
summary(rmultipla)
rmultipla = lm (tab2$TRU ~ tab2$localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = tab2)
rmultipla = lm (tab2$TRU ~ tab2$localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = dados)
rmultipla = lm (dados$TRU ~ dados$localidade + das + alt + pen + deb + pH + dur + pho + nit + amm + oxy + dbo, data = dados)
summary(rmultipla)
hist(rmultipla$residuals)
rsq (rmultipla, adj=TRUE)#APENAS PARA VALIDAR O RESULTADO
ggplot(dados, aes(x = riqueza, y = BCO)) +
geom_point() +
labs(x = "Riqueza", y = "BCO") +
theme_minimal()
ggplot(data = data.frame(residuais = resid(result_bco)), aes(x = seq_along(residuais), y = residuais)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(x = "Observações", y = "Resíduos") +
theme_minimal()
ggplot(data = data.frame(residuais = resid(rmultipla)), aes(x = seq_along(residuais), y = residuais)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(x = "Observações", y = "Resíduos") +
theme_minimal()
